<!DOCTYPE HTML>
<html>
<head>
	<title>Chat</title>
	<meta charset="utf-8">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sakura.css/css/sakura.css" type="text/css">
	<script type="module">
		import * as Turbo from 'https://cdn.skypack.dev/@hotwired/turbo@v7.3.0'
		import { Application, Controller } from 'https://cdn.skypack.dev/@hotwired/stimulus@v3.2.2'

		class FormController extends Controller {
			static targets = ['reset', 'message']

			connect() { 
				this.resetTarget.click()
				this.messageTarget.focus()
			}
		}

		class MessagesController extends Controller {
			connect() {
				this.scrollToBottom()
			}

			scrollToBottom() {
				const bottom = this.element.lastElementChild
				if (bottom) {
					bottom.scrollIntoView({ block: 'end' })
				}
			}

			async scroll() {
				if (!this.isLoading && this.element.scrollTop == 0) {
					const first = this.element.firstElementChild
					if (first && first.id !== 'reached-start') {
						this.isLoading = true
						await this.loadMessages(first.id)
						this.element.scrollTop = first.offsetTop
						this.isLoading = false
					}
				}
			}

			async loadMessages(id) {
				const res = await fetch('/messages?before_id=' + this.element.firstElementChild.id)
				const html = await res.text()
				Turbo.renderStreamMessage(html)
			}
		}

		class FlashController extends Controller {
			static values = { index: Number }

			connect() {
				const index = this.indexValue + 1
				setTimeout(() => this.element.remove(), index * 10 * 1000)
			}

			close(event) {
				this.element.remove()
			}
		}

		const application = Application.start()
		application.register('messages', MessagesController)
		application.register('form', FormController)
		application.register('flash', FlashController)

		// setInterval(() => Turbo.visit('/'), 5 * 1000)
	</script>
</head>
<body>
	{{template "flash.html.tmpl" .Flashes}}
	{{/* 26px is sum of padding-top and padding-bottom of body defined in sakura.css */}}
	<div class="container" style="height: calc(100svh - 26px); display: grid; grid-template-rows: minmax(0, 1fr) minmax(8rem, 10svh)">
		<div
			style="overflow-y: scroll; overflow-x: hidden; height: auto;"
			data-controller="messages"
			data-action="scroll->messages#scroll">
			{{ $ := . }}
			{{range .ReversedMessages}}
			<div id="{{.ID}}" style="margin-bottom: 1rem; margin-right: 2rem">
				<div style="font-size: 1.2rem; font-weight: bold;">{{ .Account }} :</div>
				<div style="font-size: 1.2rem;">{{ .Message }}</div>
				<div style="text-align: right; font-size: 0.8rem; color: #999;">{{ $.FormatCreatedAt .CreatedAt }}</div>
			</div>
			{{end}}
		</div>
		<div style="text-align: right; padding-top: 2rem">
			<form
				data-controller="form"
				style="display: grid; grid-template-columns: auto min(10rem);"
				action="/messages" method="post">
				<input type="reset" style="display: none" data-form-target="reset">
				<input type="text" name="message" placeholder="Message" style="width:100%" autocomplete="off" data-form-target="message">
				<input type="submit" value="Send">
		</div>
	</div>
</body>
</html>
